{
  "name": "coc-cfn-lint",
  "version": "0.1.2",
  "description": "cfn-lint (https://github.com/aws-cloudformation/cfn-python-lint) extension for coc.nvim",
  "author": "Joe Nye (prokonye@gmail.com)",
  "publisher": "Joe Nye (prokonye@gmail.com)",
  "license": "MIT",
  "main": "lib/index.js",
  "keywords": [
    "coc",
    "coc.nvim",
    "cfn-lint",
    "cfn-python-lint"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/joenye/coc-cfn-lint.git"
  },
  "engines": {
    "coc": "^0.0.77"
  },
  "bugs": {
    "url": "https://github.com/joenye/coc-cfn-lint/issues"
  },
  "scripts": {
    "clean": "rimraf lib",
    "watch": "webpack --watch",
    "lint": "eslint src --ext ts",
    "build": "webpack",
    "prepare": "npm-run-all clean build"
  },
  "devDependencies": {
    "@types/cross-spawn": "^6.0.2",
    "@types/js-yaml": "^4.0.5",
    "@types/lodash.isequal": "^4.5.6",
    "@types/node": "^17.0.42",
    "@types/rc": "^1.2.1",
    "@typescript-eslint/eslint-plugin": "^5.28.0",
    "@typescript-eslint/parser": "^5.28.0",
    "coc.nvim": "^0.0.81",
    "cross-spawn": "7.0.3",
    "eslint": "^8.17.0",
    "js-yaml": "^4.1.0",
    "lodash.isequal": "^4.5.0",
    "npm-run-all": "^4.1.5",
    "rimraf": "^3.0.2",
    "ts-loader": "^9.3.0",
    "typescript": "^4.7.3",
    "vscode-languageserver-protocol": "^3.17.1",
    "vscode-languageserver-textdocument": "^1.0.5",
    "webpack": "^5.73.0",
    "webpack-cli": "^4.10.0"
  },
  "activationEvents": [
    "onLanguage:yaml",
    "onLanguage:json"
  ],
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "coc-cfn-lint configuration",
      "properties": {
        "cfnlint.path": {
          "description": "Path to cfn-lint",
          "type": "string",
          "default": "cfn-lint"
        },
        "cfnlint.lintOnOpen": {
          "description": "Enable linting upon opening a valid CloudFormation JSON/YAML file",
          "type": "boolean",
          "default": true
        },
        "cfnlint.lintOnSave": {
          "description": "Enable linting upon saving a valid CloudFormation JSON/YAML file",
          "type": "boolean",
          "default": true
        },
        "cfnlint.detectCfnRegExps": {
          "description": "Array of RegExp strings. If any of these match in a JSON/YAML file, that file will be linted. This can be useful to detect non-standard CloudFormation/SAM templates, as the built-in checks only look for standard CloudFormation/SAM template",
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "cfnlint.ignoreRulesRegExps": {
          "description": "Array of RegExp strings. If any of these match a cfn-lint result message, then that result is ignored. This can be useful alongside `cfnlint.config.ignoreRules`",
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "cfnlint.config": {
          "properties": {
            "awsRegions": {
              "description": "Array of AWS regions to test against. Defaults to all regions. This is useful because certain rules (such as \"E3001\") check whether resources are supported in the given regions",
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": []
            },
            "ignoreBadTemplate": {
              "description": "Ignore bad template errors",
              "type": "boolean",
              "default": false
            },
            "ignoreRules": {
              "description": "Array of rule ID prefixes to ignore (e.g. [\"E3\", \"E1029\"])",
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": []
            },
            "includeRules": {
              "description": "Array of rule ID prefixes to include. Some checks, such as Informational checks (beginning with \"I\") are disabled by default, and can be enabled by setting this to [\"I\"]",
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": []
            },
            "customRules": {
              "description": "Array of paths containing additional rules. These can be either directories containing Python file(s), or an import path to a Python module",
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": []
            },
            "includeExperimentalRules": {
              "description": "Whether to include experimental rules",
              "type": "boolean",
              "default": false
            },
            "ruleConfigurations": {
              "description": "Array of rule configurations (e.g. [\"E3012:strict=false\"]",
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": []
            },
            "overrideSpecPath": {
              "description": "Path to a CloudFormation resource specification override file",
              "type": "string",
              "default": null
            }
          }
        }
      }
    }
  }
}
